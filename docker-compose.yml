version: '3.1'
services:
  nginx:
    container_name: nginx
    image: nginx:stable
    restart: always
    ports:
      - 80:80
    networks:
        - webnet
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/conf.d/ssl:/etc/nginx/conf.d/ssl
      - ./nginx/log/cms:/log
      - ./app/static:/usr/src/app/static
      - ./:/usr/src/app

  flask:
    container_name: flask
    build:
      context: ./
    restart: always
    volumes:
      - ./app/static:/usr/src/app/static
      - ./:/usr/src/app
    ports:
      - 5000:5000
    networks:
      - webnet
      - backend

  db:
    container_name: postgres
    image: postgres:10-alpine
    restart: always
    environment:
      POSTGRES_DB: cms
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - 4532:4532
    networks:
      - webnet
      - backend
    volumes:
      - ./sql/data/:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:5.0.2-alpine
    command: redis-server --requirepass kml7oQCKE5pXMwyz
    ports:
      - 6379:6379
    volumes:
      - ./redis/data/:/data
    networks:
      - webnet
      - backend

networks:
  webnet:
  backend:
